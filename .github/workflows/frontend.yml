name: Frontend tests
run-name: ${{ github.actor }} launching frontend tests

on:
  push:
    branches: [ main ]
    paths: [ 'frontend/**', '.github/**', '!frontend/deployment-front.yaml' ]
  pull_request:
    branches: [ main ]
    paths: [ 'frontend/**', '.github/**', '!frontend/deployment-front.yaml' ]

env:
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/challenge-5a-s1-frontend
    
jobs:
  eslint:
    name: Eslint (frontend)
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install eslint
        run: npm install eslint
      - name: Launch eslint
        run: npm run lint

  build:
    needs:
      - eslint
    runs-on: ubuntu-latest
    name: Build (frontend)
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build

  docker_build:
    if: github.event_name == 'pull_request'
    needs:
      - build
    runs-on: ubuntu-latest
    name: Build image (frontend)
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: docker build .

  publish_image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Publish image (frontend)
    needs: 
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "./frontend"
          push: true
          tags: ${{ env.DOCKERHUB_REPO }}:latest, ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    name: Deploy on VPS (frontend)
    needs: 
      - publish_image
    environment:
      name: production
      url: ${{ vars.URL }}
    concurrency: deploy
    steps:
      - uses: actions/checkout@v3
      - name: Redeploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            kubectl set image deployment/frontend-deployment front=${{ env.DOCKERHUB_REPO }}:${{ github.sha }} -n challenge-5a-s1
            kubectl wait --for=condition=available deployment/frontend-deployment -n challenge-5a-s1 --timeout=300s
